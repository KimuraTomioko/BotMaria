import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from payment import create, check

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN_HERE' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = '7347714523:AAGZA_TNJOKz2RnUqiCx3wERx0zt3eS3vPI'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é
menu_button = KeyboardButton('–ú–µ–Ω—é')
menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(menu_button)

# –ö–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "–ú–µ–Ω—é"
submenu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç'),
    KeyboardButton('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç'),
    KeyboardButton('–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã'),
    KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ'),
    KeyboardButton('–ú–µ–Ω—é')
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
products_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('–ì–∞–π–¥ –ø–æ —Å—Ç—Ä–∞—Ö–∞–º'),
    KeyboardButton('–ì–∞–π–¥ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–µ–±–µ–Ω–æ–∫'),
    KeyboardButton('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è')
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è "–ì–∞–π–¥ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–µ–±–µ–Ω–æ–∫"
inner_child_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å'),
    KeyboardButton('–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã'),
    KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ'),
    KeyboardButton('–ú–µ–Ω—é')
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ú–µ–Ω—é'.", reply_markup=menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
@dp.message_handler(lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ")
async def go_back(message: types.Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=products_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
@dp.message_handler(lambda message: message.text == "–ú–µ–Ω—é")
async def show_first_level_menu(message: types.Message):
    await message.answer('–ú–µ–Ω—é:',reply_markup=products_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler(lambda message: message.text in ["–ì–∞–π–¥ –ø–æ —Å—Ç—Ä–∞—Ö–∞–º", "–ì–∞–π–¥ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–µ–±–µ–Ω–æ–∫", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"])
async def handle_product(message: types.Message):
    product_name = message.text
    if product_name == "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è":
        await message.answer("–ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Å—è —Å–æ –º–Ω–æ–π https://t.me/maryribakova")
    elif product_name == "–ì–∞–π–¥ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–µ–±–µ–Ω–æ–∫":
        await message.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {product_name}. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=inner_child_keyboard)
    else:
        await message.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {product_name}. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=submenu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
@dp.message_handler(lambda message: message.text.startswith("–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç"))
async def buy_product(message: types.Message):
    await message.answer('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /buy')

@dp.message_handler(lambda message: message.text.startswith("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç"))
async def free_fragment(message: types.Message):
    await message.answer('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ - https://www.youtube.com/')

@dp.message_handler(lambda message: message.text == "–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã")
async def more_products(message: types.Message):
    await message.answer('–û–±—Ä–∞—Ç–Ω–æ:',reply_markup=products_keyboard)

@dp.message_handler(lambda message: message.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å")
async def view_inner_child_guide(message: types.Message):
    await message.answer('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: https://t.me/rybakovanastavnik/128')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /buy
@dp.message_handler(commands=['buy'])
async def buy_handler(message: types.Message):
    sum_to_buy = 1000
    payment_url, payment_id = create(sum_to_buy, message.chat.id)

    builder = InlineKeyboardMarkup()
    builder.add(InlineKeyboardButton(
        text='–û–ø–ª–∞—Ç–∏—Ç—å',
        url=payment_url
    ))
    builder.add(InlineKeyboardButton(
        text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É',
        callback_data=f'check_{payment_id}'
    ))

    await message.answer(f"üü¢–°—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω! –ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: {sum_to_buy}‚ÇΩ", reply_markup=builder)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã
@dp.callback_query_handler(lambda c: c.data.startswith('check_'))
async def check_handler(callback: types.CallbackQuery):
    payment_id = callback.data.split('_')[-1]
    result = check(payment_id)  # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã
    if result:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ
        await bot.send_message(
            callback.message.chat.id,
            "–û—Ç–ª–∏—á–Ω–æ, –ø–ª–∞—Ç—ë–∂ –ø—Ä–æ—à—ë–ª! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª: https://t.me/+arvnh2AOBodkYzEy"
        )

        # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–µ
        await bot.edit_message_reply_markup(
            chat_id=callback.message.chat.id,
            message_id=callback.message.message_id,
            reply_markup=None  # –ü–µ—Ä–µ–¥–∞—ë–º None, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ
        await bot.send_message(
            "1921428012",  # –í–∞—à Telegram ID
            f"–ü—Ä–æ—à–ª–∞ –æ–ø–ª–∞—Ç–∞:\n"
            f"–æ–ø–ª–∞—á–µ–Ω–æ: yes\n"
            f"chat_id: {callback.message.chat.id}\n"
            f"–ö—É—Ä—Å: –ì–∞–π–¥ –ø–æ —Å—Ç—Ä–∞—Ö–∞–º"
        )

    else:
        await callback.message.answer('–û–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ—à–ª–∞ –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞')
    await callback.answer()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
