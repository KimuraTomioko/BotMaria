import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import yookassa
from yookassa import Payment
import uuid
from payment import *
from aiogram import types
from payment import create, check
from aiogram.types import LabeledPrice
from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from aiogram import types

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN_HERE' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = '7347714523:AAGZA_TNJOKz2RnUqiCx3wERx0zt3eS3vPI'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é
menu_button = KeyboardButton('–ú–µ–Ω—é')
menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(menu_button)

# –ö–Ω–æ–ø–∫–∞ "–í—ã–±—Ä–∞—Ç—å"
buy_products_button = KeyboardButton('–í—ã–±—Ä–∞—Ç—å')
first_level_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(buy_products_button)

# –ö–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "–í—ã–±—Ä–∞—Ç—å"
button1 = KeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç')
button2 = KeyboardButton('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç')
button3 = KeyboardButton('–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã')
back_button = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ')
menu_button = KeyboardButton('–ú–µ–Ω—é')
submenu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(button1, button2, button3, back_button, menu_button)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
product1_button = KeyboardButton('–¢–æ–≤–∞—Ä 1')
product2_button = KeyboardButton('–¢–æ–≤–∞—Ä 2')
product3_button = KeyboardButton('–¢–æ–≤–∞—Ä 3')
products_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(product1_button, product2_button, product3_button)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ú–µ–Ω—é'.", reply_markup=menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
@dp.message_handler(lambda message: message.text == "–ú–µ–Ω—é")
async def show_first_level_menu(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:", reply_markup=first_level_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã"
@dp.message_handler(lambda message: message.text == "–í—ã–±—Ä–∞—Ç—å")
async def show_products(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=products_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler(lambda message: message.text == "–¢–æ–≤–∞—Ä 1")
async def handle_product1(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–æ–≤–∞—Ä 1. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=submenu_keyboard)

    # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –¢–æ–≤–∞—Ä–∞ 1
    await message.answer('–î–ª—è –¢–æ–≤–∞—Ä–∞ 1 –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –¢–æ–≤–∞—Ä 1'),
        KeyboardButton('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¢–æ–≤–∞—Ä 1'),
        KeyboardButton('–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã –¢–æ–≤–∞—Ä 1'),
        back_button, 
        KeyboardButton('–ú–µ–Ω—é')
    ))

@dp.message_handler(lambda message: message.text == "–¢–æ–≤–∞—Ä 2")
async def handle_product2(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–æ–≤–∞—Ä 2. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=submenu_keyboard)

    # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –¢–æ–≤–∞—Ä–∞ 2
    await message.answer('–î–ª—è –¢–æ–≤–∞—Ä–∞ 2 –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –¢–æ–≤–∞—Ä 2'),
        KeyboardButton('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¢–æ–≤–∞—Ä 2'),
        KeyboardButton('–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã –¢–æ–≤–∞—Ä 2'),
        back_button,
        KeyboardButton('–ú–µ–Ω—é')
    ))

@dp.message_handler(lambda message: message.text == "–¢–æ–≤–∞—Ä 3")
async def handle_product3(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–æ–≤–∞—Ä 3. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=submenu_keyboard)

    # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –¢–æ–≤–∞—Ä–∞ 3
    await message.answer('–î–ª—è –¢–æ–≤–∞—Ä–∞ 3 –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:', reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –¢–æ–≤–∞—Ä 3'),
        KeyboardButton('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¢–æ–≤–∞—Ä 3'),
        KeyboardButton('–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã –¢–æ–≤–∞—Ä 3'),
        back_button,
        KeyboardButton('–ú–µ–Ω—é')
    ))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
@dp.message_handler(lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ")
async def go_back(message: types.Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=products_keyboard)


@dp.message_handler(lambda message: message.text == "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç")
async def buy_product(message: types.Message):
    await message.answer('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /buy')

@dp.message_handler(lambda message: message.text == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç")
async def buy_product(message: types.Message):
    await message.answer('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ - https://www.youtube.com/')

@dp.message_handler(lambda message: message.text == "–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã")
async def buy_product(message: types.Message):
    await message.answer('–í–æ—Ç –µ—â—ë –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã:\n1. –ü—Ä–æ–¥—É–∫—Ç 1\n2. –ü—Ä–æ–¥—É–∫—Ç 2')


#_________________________________________________________________________________
# –¢–æ–≤–∞—Ä 1
@dp.message_handler(lambda message: message.text == "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –¢–æ–≤–∞—Ä 1")
async def buy_product(message: types.Message):
    await message.answer('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /buy')

@dp.message_handler(lambda message: message.text == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¢–æ–≤–∞—Ä 1")
async def buy_product(message: types.Message):
    await message.answer('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ - https://www.youtube.com/')

@dp.message_handler(lambda message: message.text == "–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã –¢–æ–≤–∞—Ä 1")
async def buy_product(message: types.Message):
    await message.answer('–í–æ—Ç –µ—â—ë –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã:\n1. –ü—Ä–æ–¥—É–∫—Ç 1\n2. –ü—Ä–æ–¥—É–∫—Ç 2')


#_________________________________________________________________________________
# –¢–æ–≤–∞—Ä 2
@dp.message_handler(lambda message: message.text == "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –¢–æ–≤–∞—Ä 2")
async def buy_product(message: types.Message):
    await message.answer('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /buy')

@dp.message_handler(lambda message: message.text == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¢–æ–≤–∞—Ä 2")
async def buy_product(message: types.Message):
    await message.answer('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ - https://www.youtube.com/')

@dp.message_handler(lambda message: message.text == "–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã –¢–æ–≤–∞—Ä 2")
async def buy_product(message: types.Message):
    await message.answer('–í–æ—Ç –µ—â—ë –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã:\n1. –ü—Ä–æ–¥—É–∫—Ç 1\n2. –ü—Ä–æ–¥—É–∫—Ç 2')


#_________________________________________________________________________________
# –¢–æ–≤–∞—Ä 3
@dp.message_handler(lambda message: message.text == "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –¢–æ–≤–∞—Ä 3")
async def buy_product(message: types.Message):
    await message.answer('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /buy')

@dp.message_handler(lambda message: message.text == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¢–æ–≤–∞—Ä 3")
async def buy_product(message: types.Message):
    await message.answer('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ - https://www.youtube.com/')

@dp.message_handler(lambda message: message.text == "–ï—â—ë –ø—Ä–æ–¥—É–∫—Ç—ã –¢–æ–≤–∞—Ä 3")
async def buy_product(message: types.Message):
    await message.answer('–í–æ—Ç –µ—â—ë –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã:\n1. –ü—Ä–æ–¥—É–∫—Ç 1\n2. –ü—Ä–æ–¥—É–∫—Ç 2')







# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /buy
@dp.message_handler(commands=['buy'])
async def buy_handler(message: types.Message):
    sum_to_buy = 1000
    payment_url, payment_id = create(sum_to_buy, message.chat.id)

    builder = types.InlineKeyboardMarkup()
    builder.add(types.InlineKeyboardButton(
        text='–û–ø–ª–∞—Ç–∏—Ç—å',
        url=payment_url
    ))
    builder.add(types.InlineKeyboardButton(
        text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É',
        callback_data=f'check_{payment_id}'
    ))

    await message.answer(f"üü¢–°—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω! –ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: {sum_to_buy}‚ÇΩ", reply_markup=builder)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã
@dp.callback_query_handler(lambda c: c.data.startswith('check_'))
async def check_handler(callback: types.CallbackQuery):
    payment_id = callback.data.split('_')[-1]
    result = check(payment_id)  # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã
    if result:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–µ
        await bot.send_message(
            "1921428012",  # –í–∞—à Telegram ID
            f"–ü—Ä–æ—à–ª–∞ –æ–ø–ª–∞—Ç–∞:\n"
            f"id –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: user_chat_id\n"
            f"–æ–ø–ª–∞—á–µ–Ω–æ: yes\n"
            f"chat_id: {callback.message.chat.id}\n"
        )
        await bot.send_message(callback.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –ø–ª–∞—Ç—ë–∂ –ø—Ä–æ—à—ë–ª! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª: https://www.youtube.com/")

        # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–µ
        await bot.edit_message_reply_markup(
            chat_id=callback.message.chat.id,
            message_id=callback.message.message_id,
            reply_markup=None  # –ü–µ—Ä–µ–¥–∞—ë–º None, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )

    else:
        await callback.message.answer('–û–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø—Ä–æ—à–ª–∞ –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞')
    await callback.answer()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)